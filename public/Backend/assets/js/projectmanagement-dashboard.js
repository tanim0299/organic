(function (factory) {
  typeof define === 'function' && define.amd ? define(factory) :
  factory();
})((function () { 'use strict';

  const docReady=e=>{"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):setTimeout(e,1);};const resize=e=>window.addEventListener("resize",e);const camelize=e=>{const t=e.replace(/[-_\s.]+(.)?/g,((e,t)=>t?t.toUpperCase():""));return `${t.substr(0,1).toLowerCase()}${t.substr(1)}`};const getData=(e,t)=>{try{return JSON.parse(e.dataset[camelize(t)])}catch(o){return e.dataset[camelize(t)]}};const getColor=(e,t=document.documentElement)=>getComputedStyle(t).getPropertyValue(`--phoenix-${e}`).trim();const getDates=(e,t,o=864e5)=>{const r=(t-e)/o;return Array.from({length:r+1},((t,r)=>new Date(e.valueOf()+o*r)))};const getPastDates=e=>{let t;switch(e){case"week":t=7;break;case"month":t=30;break;case"year":t=365;break;default:t=e;}const o=new Date,r=o,s=new Date((new Date).setDate(o.getDate()-(t-1)));return getDates(s,r)};

  const{merge:merge}=window._;const echartSetOption=(e,o,s)=>{console.log(merge(s(),o)),e.setOption(merge(s(),o));};const tooltipFormatter=(e,o="MMM DD")=>{let s="";return e.forEach((e=>{s+=`<div class='ms-1'>\n        <h6 class="text-700"><span class="fas fa-circle me-1 fs--2" style="color:${e.borderColor?e.borderColor:e.color}"></span>\n          ${e.seriesName} : ${"object"==typeof e.value?e.value[1]:e.value}\n        </h6>\n      </div>`;})),`<div>\n            <p class='mb-2 text-600'>\n              ${window.dayjs(e[0].axisValue).isValid()?window.dayjs(e[0].axisValue).format(o):e[0].axisValue}\n            </p>\n            ${s}\n          </div>`};

  const zeroBurnOutChartInit=()=>{const t=document.querySelector(".echart-zero-burnout-chart");if(t){const e=getData(t,"echarts"),o=window.echarts.init(t);echartSetOption(o,e,(()=>({color:[getColor("gray-400"),getColor("success"),getColor("info"),getColor("warning")],tooltip:{trigger:"axis",backgroundColor:getColor("gray-soft"),borderColor:getColor("gray-200"),formatter:t=>tooltipFormatter(t,"MMM DD, YYYY"),axisPointer:{shadowStyle:{color:"red"}}},legend:{bottom:"10",data:[{name:"Open",icon:"roundRect"},{name:"Issues found",icon:"roundRect"},{name:"In Progress",icon:"roundRect"}],itemWidth:16,itemHeight:8,itemGap:20,inactiveColor:getColor("gray-500"),inactiveBorderWidth:0,textStyle:{color:getColor("gray-900"),fontWeight:600,fontSize:16,fontFamily:"Nunito Sans"}},xAxis:[{show:!0,interval:2,axisLine:{lineStyle:{type:"solid",color:getColor("gray-300")}},axisLabel:{color:getColor("gray-900"),formatter:t=>window.dayjs(t).format("D MMM"),interval:5,align:"left",margin:20,fontSize:12.8},axisTick:{show:!0,length:15},splitLine:{interval:0,show:!0,lineStyle:{color:getColor("gray-300"),type:"dashed"}},type:"category",boundaryGap:!1,data:getPastDates(15)},{show:!0,interval:2,axisLine:{show:!1},axisLabel:{show:!1},axisTick:{show:!1},splitLine:{interval:1,show:!0,lineStyle:{color:getColor("gray-300"),type:"solid"}},boundaryGap:!1,data:getPastDates(15)}],yAxis:{show:!0,type:"value",axisLine:{lineStyle:{type:"solid",color:getColor("gray-300")}},axisLabel:{color:getColor("gray-900"),margin:20,fontSize:12.8,interval:0},splitLine:{show:!0},axisTick:{show:!0,length:15,alignWithLabel:!0,lineStyle:{color:getColor("gray-300")}}},series:[{name:"Estimated",type:"line",symbol:"none",data:[20,17.5,15,15,15,12.5,10,7.5,5,2.5,2.5,2.5,0],lineStyle:{width:0},areaStyle:{color:getColor("gray-300"),opacity:.15},tooltip:{show:!1}},{name:"Issues found",type:"line",symbolSize:6,data:[3,1,2,4,3,1]},{name:"Open",type:"line",symbolSize:6,data:[6,5,4,6,5,5]},{name:"In Progress",type:"line",symbolSize:6,data:[11,12,11,9,11,6]},{name:"Actual",type:"line",symbolSize:6,data:[20,19,15,14,12,8],lineStyle:{type:"dashed"}}],grid:{right:5,left:0,bottom:"15%",top:20,containLabel:!0}}))),resize((()=>{o.resize();}));}};

  const issuesDiscoveredChartInit=()=>{const e=document.querySelector(".echart-issue-chart");if(e){const t=getData(e,"echarts"),o=window.echarts.init(e);echartSetOption(o,t,(()=>({color:[getColor("info-300"),getColor("warning-300"),getColor("danger-300"),getColor("success-300"),getColor("primary")],tooltip:{trigger:"item"},responsive:!0,maintainAspectRatio:!1,series:[{name:"Tasks assigned to me",type:"pie",radius:["48%","90%"],startAngle:30,avoidLabelOverlap:!1,label:{show:!1,position:"center",formatter:"{x|{d}%} \n {y|{b}}",rich:{x:{fontSize:39.06,fontWeight:800,color:getColor("gray-700"),padding:[0,0,5,15]},y:{fontSize:12.8,color:getColor("gray-700"),fontWeight:600}}},emphasis:{label:{show:!0}},labelLine:{show:!1},data:[{value:56,name:"QA & Testing"},{value:24,name:"R & D"},{value:36,name:"customer queries"},{value:78,name:"Product design"},{value:63,name:"Development"}]}],grid:{bottom:0,top:0,left:0,right:0,containLabel:!1}}))),resize((()=>{o.resize();}));}};

  docReady(zeroBurnOutChartInit),docReady(issuesDiscoveredChartInit);

}));
//# sourceMappingURL=projectmanagement-dashboard.js.map
